# -*- coding: utf-8 -*-
"""sahil_project_final

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wwPSJeUG4aiJDZOdECJNwUzbBXy8dq4e
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df= pd.read_csv("/content/drive/MyDrive/kodeing kgp/Top10VideoGameStocks.csv")

df.head()

jpy_to_inr=0.56
sek_to_inr=7.74
hkd_to_inr=10.88
usd_to_inr=84.67
df.head()

convert_={'Open' : float}
df=df.astype(convert_)
print(df['Open'].dtypes)
df['Open'] = np.where(df['Currency'] == 'USD', df['Open'] * usd_to_inr, df['Open'])
df['High'] = np.where(df['Currency'] == 'USD', df['High'] * usd_to_inr, df['High'])
df['Low'] = np.where(df['Currency'] == 'USD', df['Low'] * usd_to_inr, df['Low'])
df['Close'] = np.where(df['Currency'] == 'USD', df['Close'] * usd_to_inr, df['Close'])

df['Open'] = np.where(df['Currency'] == 'JPY', df['Open'] * jpy_to_inr, df['Open'])
df['High'] = np.where(df['Currency'] == 'JPY', df['High'] * jpy_to_inr, df['High'])
df['Low'] = np.where(df['Currency'] == 'JPY', df['Low'] * jpy_to_inr, df['Low'])
df['Close'] = np.where(df['Currency'] == 'JPY', df['Close'] * jpy_to_inr, df['Close'])

df['Open'] = np.where(df['Currency'] == 'SEK', df['Open'] * sek_to_inr, df['Open'])
df['High'] = np.where(df['Currency'] == 'SEK', df['High'] * sek_to_inr, df['High'])
df['Low'] = np.where(df['Currency'] == 'SEK', df['Low'] * sek_to_inr, df['Low'])
df['Close'] = np.where(df['Currency'] == 'SEK', df['Close'] * sek_to_inr, df['Close'])

df['Open'] = np.where(df['Currency'] == 'HKD', df['Open'] * hkd_to_inr, df['Open'])
df['High'] = np.where(df['Currency'] == 'HKD', df['High'] * hkd_to_inr, df['High'])
df['Low'] = np.where(df['Currency'] == 'HKD', df['Low'] * hkd_to_inr, df['Low'])
df['Close'] = np.where(df['Close']== 'HKD', df['Close']* hkd_to_inr, df['Close'])

df['Currency'] = 'INR'

df.head()

df=df.drop(columns=['Currency','Adj Close'])
df.head()

sony_db = df[df["Company"] == "Sony Interactive Entertainment"]
sony_db.head()
max_open = sony_db["Open"].max()
max_close= sony_db['Close'].max()
max_high= sony_db['High'].max()
max_low= sony_db['Low'].max()

sony_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
sony_array = np.array([sony_dict])

sony_array

tencent_db = df[df["Company"] == "Tencent Interactive Entertainment"]
max_open = tencent_db["Open"].max()
max_close= tencent_db['Close'].max()
max_high= tencent_db['High'].max()
max_low= tencent_db['Low'].max()

tencent_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
tencent_array = np.array([tencent_dict])

tencent_array

msft_db = df[df["Company"] == "Microsoft Gaming"]
max_open = msft_db["Open"].max()
max_close= msft_db['Close'].max()
max_high= msft_db['High'].max()
max_low= msft_db['Low'].max()

msft_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
msft_array = np.array([msft_dict])

msft_array

ntdo_db = df[df["Company"] == "Nintendo"]
ntdo_db.head()
max_open = ntdo_db["Open"].max()
max_close= ntdo_db['Close'].max()
max_high= ntdo_db['High'].max()
max_low= ntdo_db['Low'].max()

ntdo_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
ntdo_array = np.array([ntdo_dict])

ntdo_array

ntez_db = df[df["Company"] == "NetEase Games"]
ntez_db.head()
max_open = ntez_db["Open"].max()
max_close= ntez_db['Close'].max()
max_high= ntez_db['High'].max()
max_low= ntez_db['Low'].max()

ntez_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
ntez_array = np.array([ntez_dict])

ntez_array

ea_db = df[df["Company"] == "Electronic Arts"]
ea_db.head()
max_open = ea_db["Open"].max()
max_close= ea_db['Close'].max()
max_high= ea_db['High'].max()
max_low= ea_db['Low'].max()

ea_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
ea_array = np.array([ea_dict])

ea_array

tti_db = df[df["Company"] == "Take-Two Interactive"]
tti_db.head()
max_open = tti_db["Open"].max()
max_close= tti_db['Close'].max()
max_high= tti_db['High'].max()
max_low= tti_db['Low'].max()

tti_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
tti_array = np.array([tti_dict])

tti_array

EmbG_db = df[df["Company"] == "Embracer Group"]
EmbG_db.head()
max_open = EmbG_db["Open"].max()
max_close= EmbG_db['Close'].max()
max_high= EmbG_db['High'].max()
max_low= EmbG_db['Low'].max()

EmbG_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
EmbG_array = np.array([EmbG_dict])

EmbG_array

rbc_db = df[df["Company"] == "Roblox Corporation"]
rbc_db.head()
max_open = rbc_db["Open"].max()
max_close= rbc_db['Close'].max()
max_high= rbc_db['High'].max()
max_low= rbc_db['Low'].max()

rbc_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
rbc_array = np.array([rbc_dict])

rbc_array

ptk_db = df[df["Company"] == "Playtika"]
ptk_db.head()
max_open = ptk_db["Open"].max()
max_close= ptk_db['Close'].max()
max_high= ptk_db['High'].max()
max_low= ptk_db['Low'].max()

ptk_dict = {
    'Max Open': max_open,
    'Max High': max_high,
    'Max Low': max_low,
    'Max Close': max_close
}
ptk_array = np.array([ptk_dict])

ptk_array

df['Profit']= df['Open']-df['Close']
df['Total Profit'] = df['Profit']*df['Volume']
df.head()

monthly_profit = df.groupby(['Company', 'Date'])['Total Profit'].sum().reset_index()
plt.figure(figsize=(36, 12))
for company in monthly_profit['Company'].unique():
    company_data = monthly_profit[monthly_profit['Company'] == company]
    plt.plot(company_data['Date'], company_data['Total Profit'], label=company)

plt.xlabel('Month')
plt.ylabel('Total Profit')
plt.title('Total Profit per Company per Month')
plt.xticks(rotation=90)
plt.legend()
plt.tight_layout()
plt.show()
